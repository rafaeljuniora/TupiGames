-- Migration generated from PostgreSQL dump
-- PostgreSQL database version: 17.4

BEGIN;

CREATE SCHEMA IF NOT EXISTS public;
COMMENT ON SCHEMA public IS 'standard public schema';

CREATE SEQUENCE IF NOT EXISTS public.aluno_aluno_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE SEQUENCE IF NOT EXISTS public.aluno_seq
    START WITH 1
    INCREMENT BY 50
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE SEQUENCE IF NOT EXISTS public.professor_professor_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE SEQUENCE IF NOT EXISTS public.professor_seq
    START WITH 1
    INCREMENT BY 50
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE SEQUENCE IF NOT EXISTS public.resposta_aluno_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE SEQUENCE IF NOT EXISTS public.resposta_seq
    START WITH 1
    INCREMENT BY 50
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE SEQUENCE IF NOT EXISTS public.turma_aluno_aluno_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE SEQUENCE IF NOT EXISTS public.turma_professor_professor_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE SEQUENCE IF NOT EXISTS public.turma_seq
    START WITH 1
    INCREMENT BY 50
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE TABLE IF NOT EXISTS public.escola (
    escola_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.escola_escola_id_seq
        START WITH 1
        INCREMENT BY 1
        NO MINVALUE
        NO MAXVALUE
        CACHE 1
    ),
    email character varying(255) NOT NULL,
    nome_escola character varying(255) NOT NULL,
    senha character varying(255) NOT NULL,
    CONSTRAINT escola_pkey PRIMARY KEY (escola_id),
    CONSTRAINT ukg3omtu1myy5gj6x6lievp0nb4 UNIQUE (email),
    CONSTRAINT ukfn36yi4rvy5ht6ujd9fxu5vhv UNIQUE (nome_escola)
);

CREATE TABLE IF NOT EXISTS public.aluno (
    aluno_id integer NOT NULL DEFAULT nextval('public.aluno_aluno_id_seq'::regclass),
    nome_aluno character varying(255),
    senha character varying(255),
    escola_id bigint NOT NULL,
    CONSTRAINT aluno_pkey PRIMARY KEY (aluno_id),
    CONSTRAINT fk6hk33lkumbcc8hsndhtmwoyl6 FOREIGN KEY (escola_id) REFERENCES public.escola(escola_id)
);

CREATE TABLE IF NOT EXISTS public.professor (
    professor_id integer NOT NULL DEFAULT nextval('public.professor_professor_id_seq'::regclass),
    data_nascimento character varying(255),
    email character varying(255),
    nome_professor character varying(255),
    senha character varying(255),
    ultima_vez_ativo bigint,
    escola_id bigint NOT NULL,
    CONSTRAINT professor_pkey PRIMARY KEY (professor_id),
    CONSTRAINT fk1i6c1qt9bycqeqh796sno9on9 FOREIGN KEY (escola_id) REFERENCES public.escola(escola_id)
);

CREATE TABLE IF NOT EXISTS public.turma (
    turma_id bigint NOT NULL,
    nome_turma character varying(255),
    periodo character varying(255),
    qnt_alunos integer,
    escola_id bigint NOT NULL,
    CONSTRAINT turma_pkey PRIMARY KEY (turma_id),
    CONSTRAINT fknk7a7al7r422ftom47mabsvm1 FOREIGN KEY (escola_id) REFERENCES public.escola(escola_id)
);

CREATE TABLE IF NOT EXISTS public.turma_aluno (
    turma_id bigint NOT NULL,
    aluno_id integer NOT NULL DEFAULT nextval('public.turma_aluno_aluno_id_seq'::regclass),
    CONSTRAINT turma_aluno_pkey PRIMARY KEY (turma_id, aluno_id),
    CONSTRAINT fk8jlmncan0ekxtbsjfdgwcigtn FOREIGN KEY (turma_id) REFERENCES public.turma(turma_id),
    CONSTRAINT fko4hb9mkklqma8p1p6dbpg790p FOREIGN KEY (aluno_id) REFERENCES public.aluno(aluno_id)
);

CREATE TABLE IF NOT EXISTS public.turma_professor (
    turma_id bigint NOT NULL,
    professor_id integer NOT NULL DEFAULT nextval('public.turma_professor_professor_id_seq'::regclass),
    CONSTRAINT turma_professor_pkey PRIMARY KEY (turma_id, professor_id),
    CONSTRAINT fkgebnucfia04rcb2rv3773hlhh FOREIGN KEY (turma_id) REFERENCES public.turma(turma_id),
    CONSTRAINT fklopoyd8l825id7etoq9pndf0f FOREIGN KEY (professor_id) REFERENCES public.professor(professor_id)
);

CREATE TABLE IF NOT EXISTS public.atividade (
    atividade_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.atividade_atividade_id_seq
        START WITH 1
        INCREMENT BY 1
        NO MINVALUE
        NO MAXVALUE
        CACHE 1
    ),
    atividade_code bigint NOT NULL,
    criador character varying(255),
    data_criacao bigint,
    global boolean,
    nome_atividade character varying(255),
    CONSTRAINT atividade_pkey PRIMARY KEY (atividade_id)
);

CREATE TABLE IF NOT EXISTS public.atividade_turma (
    atividade_id bigint NOT NULL,
    turma_id bigint NOT NULL,
    CONSTRAINT fk916kh3ov8mcm2718px575s2gd FOREIGN KEY (atividade_id) REFERENCES public.atividade(atividade_id),
    CONSTRAINT fkomippx438hy8fvxc41ve52t35 FOREIGN KEY (turma_id) REFERENCES public.turma(turma_id)
);

CREATE TABLE IF NOT EXISTS public.pergunta (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.pergunta_id_seq
        START WITH 1
        INCREMENT BY 1
        NO MINVALUE
        NO MAXVALUE
        CACHE 1
    ),
    enunciado boolean,
    imagem boolean,
    imagem_enunciado boolean,
    valor text,
    atividade_id bigint,
    CONSTRAINT pergunta_pkey PRIMARY KEY (id),
    CONSTRAINT fk9jh1ku8wrhimq6vrya1a7j5xl FOREIGN KEY (atividade_id) REFERENCES public.atividade(atividade_id)
);

CREATE TABLE IF NOT EXISTS public.alternativa (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (
        SEQUENCE NAME public.alternativa_id_seq
        START WITH 1
        INCREMENT BY 1
        NO MINVALUE
        NO MAXVALUE
        CACHE 1
    ),
    acerto boolean,
    enunciado boolean,
    imagem boolean,
    valor text,
    pergunta_id bigint,
    CONSTRAINT alternativa_pkey PRIMARY KEY (id),
    CONSTRAINT fk20h0e86jqwhplvdyju4b1tb86 FOREIGN KEY (pergunta_id) REFERENCES public.pergunta(id)
);

CREATE TABLE IF NOT EXISTS public.resposta (
    resposta_id bigint NOT NULL,
    acertos integer,
    enviado bigint,
    pontos bigint,
    total integer,
    aluno_id integer NOT NULL DEFAULT nextval('public.resposta_aluno_id_seq'::regclass),
    atividade_id bigint,
    CONSTRAINT resposta_pkey PRIMARY KEY (resposta_id),
    CONSTRAINT ukqidfqe1qr703b9w14axx6skqv UNIQUE (aluno_id, atividade_id),
    CONSTRAINT fk4yt427axuvwrw7hsgvb403w12 FOREIGN KEY (aluno_id) REFERENCES public.aluno(aluno_id),
    CONSTRAINT fksxb4uwkhi9hyp5qfh61xs635r FOREIGN KEY (atividade_id) REFERENCES public.atividade(atividade_id)
);

INSERT INTO public.escola (escola_id, email, nome_escola, senha) VALUES
(1, 'admin@escola.com', 'Admin', 'admin@escola.com');

INSERT INTO public.aluno (aluno_id, nome_aluno, senha, escola_id) VALUES
(1, 'Admin', 'Admin', 1);

INSERT INTO public.professor (professor_id, data_nascimento, email, nome_professor, senha, ultima_vez_ativo, escola_id) VALUES
(1, '1/01/1970', 'admin@professor.com', 'Professor Admin', 'admin@professor.com', 1750460528370, 1);

INSERT INTO public.turma (turma_id, nome_turma, periodo, qnt_alunos, escola_id) VALUES
(1, 'Turma Admin', 'Matutino', 100, 1);

INSERT INTO public.atividade (atividade_id, atividade_code, criador, data_criacao, global, nome_atividade) VALUES
(1, 33879545, 'admin@professor.com', 1750460528370, false, 'Atividade Admin');

INSERT INTO public.pergunta (id, enunciado, imagem, imagem_enunciado, valor, atividade_id) VALUES
(1, true, false, false, 'De quem é a famosa frase "Penso, logo existo"?', 1),
(2, true, false, false, 'De onde é a invenção do chuveiro elétrico?', 1),
(3, true, false, false, 'Quais o menor e o maior país do mundo?', 1),
(4, true, false, false, 'Qual o grupo em que todas as palavras foram escritas corretamente?', 1);

INSERT INTO public.alternativa (id, acerto, enunciado, imagem, valor, pergunta_id) VALUES
(1, false, true, false, 'Platão', 1),
(2, false, true, false, 'Sócrates', 1),
(3, true, true, false, 'Descartes', 1),
(4, false, true, false, 'Galileu Galilei', 1),
(5, true, true, false, 'Brasil', 2),
(6, false, true, false, 'França', 2),
(7, false, true, false, 'Itália', 2),
(8, false, true, false, 'Inglaterra', 2),
(9, false, true, false, 'Malta e Estados Unidos', 3),
(10, false, true, false, 'Mônaco e Canadá', 3),
(11, false, true, false, 'São Marino e Índia', 3),
(12, true, true, false, 'Vaticano e Rússia', 3),
(13, false, true, false, 'Asterístico, beneficiente, meteorologia, entertido.', 4),
(14, true, true, false, 'Asterisco, beneficente, meteorologia, entretido.', 4),
(15, false, true, false, 'Asterisco, beneficente, metereologia, entretido.', 4),
(16, false, true, false, 'Asterístico, beneficiente, metereologia, entretido', 4);

INSERT INTO public.atividade_turma (atividade_id, turma_id) VALUES
(1, 1);

INSERT INTO public.turma_aluno (turma_id, aluno_id) VALUES
(1, 1);

INSERT INTO public.turma_professor (turma_id, professor_id) VALUES
(1, 1);

SELECT pg_catalog.setval('public.alternativa_id_seq', 16, true);
SELECT pg_catalog.setval('public.aluno_aluno_id_seq', 1, false);
SELECT pg_catalog.setval('public.aluno_seq', 1, true);
SELECT pg_catalog.setval('public.atividade_atividade_id_seq', 1, true);
SELECT pg_catalog.setval('public.escola_escola_id_seq', 1, true);
SELECT pg_catalog.setval('public.pergunta_id_seq', 4, true);
SELECT pg_catalog.setval('public.professor_professor_id_seq', 1, false);
SELECT pg_catalog.setval('public.professor_seq', 1, true);
SELECT pg_catalog.setval('public.resposta_aluno_id_seq', 1, false);
SELECT pg_catalog.setval('public.resposta_seq', 1, false);
SELECT pg_catalog.setval('public.turma_aluno_aluno_id_seq', 1, false);
SELECT pg_catalog.setval('public.turma_professor_professor_id_seq', 1, false);
SELECT pg_catalog.setval('public.turma_seq', 1, true);

COMMIT;